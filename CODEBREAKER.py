# @Author: Bryce Planchard
# @Date:   2019-09-29T15:52:42-04:00
# @Email:  Somelose13@hotmail.com
# @Project: Practice Game
# @Filename: codebreaker(finished).py
# @Last modified by:   Bryce Planchard
# @Last modified: 2025/08/17 10:21:05
#
# A simple game that gives you chances to guess the
# numerical code generated by the computer.
#
# ascii art from (http://patorjk.com/software/taag/)
#

import random

def printName():

    name = """
   ******    *******   *******   ******** ******   *******   ********     **     **   ** ******** *******
  **////**  **/////** /**////** /**///// /*////** /**////** /**/////     ****   /**  ** /**///// /**////**
 **    //  **     //**/**    /**/**      /*   /** /**   /** /**         **//**  /** **  /**      /**   /**
/**       /**      /**/**    /**/******* /******  /*******  /*******   **  //** /****   /******* /*******
/**       /**      /**/**    /**/**////  /*//// **/**///**  /**////   **********/**/**  /**////  /**///**
//**    **//**     ** /**    ** /**      /*    /**/**  //** /**      /**//////**/**//** /**      /**  //**
 //******  //*******  /*******  /********/******* /**   //**/********/**     /**/** //**/********/**   //**
  //////    ///////   ///////   //////// ///////  //     // //////// //      // //   // //////// //     // \n"""
    print(name)
    return


def numGen(difficulty):                                                          # set code length(difficulty)

    codeLength = int(difficulty) + 3
    code = []
    for i in range(codeLength):
        code.append(random.randrange(10))
    return code


def userList(attempt):                                                           # turn input into list for check values

    list = []
    for char in attempt:
        list.append(int(char))
    return list


def chkNum(list, code):                                                          # check your attempt for accuracy and return code check values

    answer = []
    for i in range(len(code)):
        if list[i] == code[i]:
            answer.append("@")
        elif list[i] in code:
            answer.append("*")
        else:
            answer.append("x")
    return answer


def youWin(turns):                                                               # win ascii

    win = """
 **    **         *******         **     **             **       **       **       ****     **       **
//**  **         **/////**       /**    /**            /**      /**      /**      /**/**   /**      /**
 //****         **     //**      /**    /**            /**   *  /**      /**      /**//**  /**      /**
  //**         /**      /**      /**    /**            /**  *** /**      /**      /** //** /**      /**
   /**         /**      /**      /**    /**            /** **/**/**      /**      /**  //**/**      /**
   /**         //**     **       /**    /**            /**** //****      /**      /**   //****      //
   /**          //*******        //*******             /**/   ///**      /**      /**    //***       **
   //            ///////          ///////              //       //       //       //      ///       // """
    print(win)
    print("\nYou had %d tries remaining." % turns)
    playAgain()


def youLose(strCode):                                                            # lose ascii

    lose = """
 **    **                        **                                      **
//**  **                        /**                                     /**
 //****    ******  **   **      /**        ******   ******  *****       /**
  //**    **////**/**  /**      /**       **////** **////  **///**      /**
   /**   /**   /**/**  /**      /**      /**   /**//***** /*******      /**
   /**   /**   /**/**  /**      /**      /**   /** /////**/**////       //
   /**   //****** //******      /********//******  ****** //******       **
   //     //////   //////       ////////  //////  //////   //////       // """

    print(lose)
    print("\nThe code was " + strCode + ".")

    playAgain()


def playAgain():                                                                 # play again input after game

    while True:
        try:
            yN = input("Would you like to play again?").lower()
        except:
            print("Not a valid response.")
        if yN == "y":
            game()
        elif yN == "n":
            return False
        else:
            print("Not a valid response. (y/n)")


def printRules():                                                               # game rules at start

    print("""
Rules:\n
 @ denotes right position
 * denotes wrong position
 x denotes wrong number\n""")

    return


def askDiff():                                                                  # ask for difficulty number, tell user code length

    diff = 0

    while not int(diff) in range(1,11):
        try:
            diff = int(input("Difficulty rating? (1-10) \n"))
        except:
            print("Please enter a number, 1-10.\n")

    length = diff + 3                                                            # difficulty + 3 = length of code
    print("The code is %d digits long.\n" % length)                              # tell user length of code
    return diff


def askAttempt(codeLen):
    while True:
        attempt = (input("What is the code?\n"))
        attemptChk = str(attempt)
        try:
            attemptChk = int(attemptChk)
        except:
            print("That is not a number. Please try again.\n")
            continue
        else:
            if len(attempt) == codeLen:
                return attempt
            else:
                attempt = attempt.zfill(codeLen)
                return attempt

#           STARTING GAME
#_______________________________________________________________________________

def game():

    print("\033c")                                                               # clear terminal for play

    printName()                                                                  # game name ascii

    printRules()                                                                 # game rules

    diff = askDiff()                                                             # ask for difficulty, return difficulty

    code = numGen(diff)                                                          # generate code with difficulty variable

    strCode = ''.join(str(f) for f in code)                                      # string code for comparison

    turns = diff + 6                                                             # calculate turns allowed, difficulty + 6

    print("You have %d tries to crack the code.\n" % turns)                      # tell user initial turns

    while turns > 0:

        if turns == 0:                                                           # lose condition
            youLose(strCode)
            return

        strAttempt = askAttempt(len(code))

        if strAttempt == strCode:                                                # win condition
            youWin(turns)
            break

        elif len(strAttempt) == len(code):                                       # compare length check

            list = userList(strAttempt)
            userTry = chkNum(list,code)                                          # compare and get indicators
            userTry = ''.join(str(c) for c in userTry)
            print(userTry)
            turns += -1
            print("\nYou have %d tries remaining." % turns)

        else:
            print("Code length does not match. Please try again.")               # length check error
            continue


#           ENDING GAME
#_______________________________________________________________________________

game()
